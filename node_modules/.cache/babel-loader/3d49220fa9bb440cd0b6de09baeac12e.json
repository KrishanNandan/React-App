{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\Jai\\\\React-Project1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _objectSpread from\"C:\\\\Users\\\\Jai\\\\React-Project1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _slicedToArray from\"C:\\\\Users\\\\Jai\\\\React-Project1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Jai\\\\React-Project1\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useContext}from\"react\";import Modal from\"../UI/Modal\";import CartItem from\"./CartItem\";import classes from\"./Cart.module.css\";import CartContext from\"../../Store/cart-context\";import Checkout from\"./Checkout\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Cart=function Cart(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isChecking=_useState2[0],setIsChecking=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isSubmitting=_useState4[0],setIsSubmitting=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),didSubmit=_useState6[0],setDidSubmit=_useState6[1];var Cart=useContext(CartContext);var totalAmount=\"\".concat(Cart.totalAmount.toFixed(2),\"\\u20B9\");var hasItem=Cart.items.length>0;var cartItemAddHandler=function cartItemAddHandler(item){Cart.addItem(_objectSpread(_objectSpread({},item),{},{amount:1}));};var cartItemRemoveHandler=function cartItemRemoveHandler(id){Cart.removeItem(id);};var Cartitems=/*#__PURE__*/_jsx(\"ul\",{className:classes[\"cart-items\"],children:Cart.items.map(function(item){return/*#__PURE__*/_jsx(CartItem,{name:item.name,amount:item.amount,price:item.price,onRemove:cartItemRemoveHandler.bind(null,item.id),onAdd:cartItemAddHandler.bind(null,item)},item.id);})});var orderHandler=function orderHandler(e){setIsChecking(true);console.log(\"Ordering...\");// props.onHideCart();\n};var modalAction=/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{className:classes[\"button-alt\"],onClick:props.onHideCart,children:\"Close\"}),hasItem&&/*#__PURE__*/_jsx(\"button\",{className:classes.button,onClick:orderHandler,children:\"Order\"})]});var submitOrderHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userData){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsSubmitting(true);_context.next=3;return fetch(\"https://fooddelivery-665ca-default-rtdb.asia-southeast1.firebasedatabase.app/order.json\",{method:\"POST\",body:JSON.stringify({user:userData,orderedItems:Cart.items})});case 3:setIsSubmitting(false);setDidSubmit(true);Cart.clearCart();case 6:case\"end\":return _context.stop();}}},_callee);}));return function submitOrderHandler(_x){return _ref.apply(this,arguments);};}();var cartModalContent=/*#__PURE__*/_jsxs(React.Fragment,{children:[Cartitems,/*#__PURE__*/_jsxs(\"div\",{className:classes.total,children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Amount\"}),/*#__PURE__*/_jsx(\"span\",{children:totalAmount})]}),isChecking?/*#__PURE__*/_jsx(Checkout,{onConfirm:submitOrderHandler,onCancel:props.onHideCart}):\"\",!isChecking&&modalAction]});var isSubmittingModalContent=/*#__PURE__*/_jsx(\"p\",{children:\"Sending order data...\"});var didSubmittingContent=/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Sucessfully submitted your order...\"}),/*#__PURE__*/_jsx(\"div\",{className:classes.actions,children:/*#__PURE__*/_jsx(\"button\",{className:classes.button,onClick:props.onHideCart,children:\"Close\"})})]});return/*#__PURE__*/_jsxs(Modal,{onClick:props.onHideCart,children:[isSubmitting&&isSubmittingModalContent,!isSubmitting&&didSubmit&&didSubmittingContent,!isSubmitting&&!didSubmit&&cartModalContent]});};export default Cart;","map":{"version":3,"sources":["C:/Users/Jai/React-Project1/src/Components/Cart/Cart.js"],"names":["React","useContext","Modal","CartItem","classes","CartContext","Checkout","useState","Cart","props","isChecking","setIsChecking","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","totalAmount","toFixed","hasItem","items","length","cartItemAddHandler","item","addItem","amount","cartItemRemoveHandler","id","removeItem","Cartitems","map","name","price","bind","orderHandler","e","console","log","modalAction","actions","onHideCart","button","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","clearCart","cartModalContent","total","isSubmittingModalContent","didSubmittingContent"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartItem from \"./CartItem\";\r\nimport classes from \"./Cart.module.css\";\r\nimport CartContext from \"../../Store/cart-context\";\r\nimport Checkout from \"./Checkout\";\r\nimport { useState } from \"react\";\r\nconst Cart = (props) => {\r\n  const [isChecking, setIsChecking] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n  const Cart = useContext(CartContext);\r\n  const totalAmount = `${Cart.totalAmount.toFixed(2)}â‚¹`;\r\n  const hasItem = Cart.items.length > 0;\r\n  const cartItemAddHandler = (item) => {\r\n    Cart.addItem({ ...item, amount: 1 });\r\n  };\r\n  const cartItemRemoveHandler = (id) => {\r\n    Cart.removeItem(id);\r\n  };\r\n  const Cartitems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {Cart.items.map((item) => {\r\n        return (\r\n          <CartItem\r\n            key={item.id}\r\n            name={item.name}\r\n            amount={item.amount}\r\n            price={item.price}\r\n            onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n            onAdd={cartItemAddHandler.bind(null, item)}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n\r\n  const orderHandler = function (e) {\r\n    setIsChecking(true);\r\n    console.log(\"Ordering...\");\r\n    // props.onHideCart();\r\n  };\r\n\r\n  const modalAction = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button-alt\"]} onClick={props.onHideCart}>\r\n        Close\r\n      </button>\r\n      {hasItem && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const submitOrderHandler = async (userData) => {\r\n    setIsSubmitting(true);\r\n    await fetch(\r\n      \"https://fooddelivery-665ca-default-rtdb.asia-southeast1.firebasedatabase.app/order.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ user: userData, orderedItems: Cart.items }),\r\n      }\r\n    );\r\n    setIsSubmitting(false);\r\n    setDidSubmit(true);\r\n    Cart.clearCart();\r\n  };\r\n\r\n  const cartModalContent = (\r\n    <React.Fragment>\r\n      {Cartitems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isChecking ? (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onHideCart} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {!isChecking && modalAction}\r\n    </React.Fragment>\r\n  );\r\n  const isSubmittingModalContent = <p>Sending order data...</p>;\r\n  const didSubmittingContent = (\r\n    <React.Fragment>\r\n      <p>Sucessfully submitted your order...</p>\r\n      <div className={classes.actions}>\r\n        <button className={classes.button} onClick={props.onHideCart}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n  return (\r\n    <Modal onClick={props.onHideCart}>\r\n      {isSubmitting && isSubmittingModalContent}\r\n      {!isSubmitting && didSubmit && didSubmittingContent}\r\n      {!isSubmitting && !didSubmit && cartModalContent}\r\n    </Modal>\r\n  );\r\n};\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}